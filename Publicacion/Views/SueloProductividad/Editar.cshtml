@model SistemaExperto.Models.SueloProductividad

@{
    ViewBag.Title = "Editar suelo";
}
<!-- Estilos -->
<link href="~/Content/css/jquery-ui.css" rel="stylesheet" />
<link href="~/Content/css/se.css" rel="stylesheet" />
<link href="~/Content/css/main.css" rel="stylesheet" />
<link href="~/Content/css/whhg.css" rel="stylesheet" />

<!-- ruta de navegación -->
<ol class="breadcrumb">
    <li><a href="/">Inicio</a></li>
    <li><a href="~/Administracion/Index">Administración</a></li>
    <li><a href="~/Administracion/Productividad">Productividad</a></li>
    <li><a href="~/SueloProductividad">Suelo productividad</a></li>
    <li class="active">Editar</li>
</ol>

<!-- Scripts -->
<script src="~/Scripts/jquery-2.1.1.js"></script>
<script src="~/Scripts/jquery-ui-1.11.1.js"></script>

<!-- Contenido -->
<div class="row col-md-10 col-md-offset-1 contenido">

    <!--título-->
    <h2>Editar suelo productividad</h2>
    <hr />

    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()

        <div class="form-horizontal">

            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            @Html.HiddenFor(model => model.SueloProductividadId)
            <div class="row">
                <div class="col-md-6 col-sm-12">
                    <div class="form-group">
                        @Html.LabelFor(model => model.CC, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.CC, new { htmlAttributes = new { @class = "form-control", onblur = "reemplazarPunto(this)" } })
                            @Html.ValidationMessageFor(model => model.CC, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.CCMenor, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.CCMenor, new { htmlAttributes = new { @class = "form-control", onblur = "reemplazarPunto(this)" } })
                            @Html.ValidationMessageFor(model => model.CCMenor, "", new { @class = "text-danger"  })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.CCMayor, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.CCMayor, new { htmlAttributes = new { @class = "form-control", onblur = "reemplazarPunto(this)" } })
                            @Html.ValidationMessageFor(model => model.CCMayor, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.PMP, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.PMP, new { htmlAttributes = new { @class = "form-control" }, onblur = "reemplazarPunto(this)" })
                            @Html.ValidationMessageFor(model => model.PMP, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.PMPMenor, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.PMPMenor, new { htmlAttributes = new { @class = "form-control", onblur = "reemplazarPunto(this)" } })
                            @Html.ValidationMessageFor(model => model.PMPMenor, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.PMPMayor, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.PMPMayor, new { htmlAttributes = new { @class = "form-control", onblur = "reemplazarPunto(this)" } })
                            @Html.ValidationMessageFor(model => model.PMPMayor, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Da, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.Da, new { htmlAttributes = new { @class = "form-control" }, onblur = "reemplazarPunto(this)" })
                            @Html.ValidationMessageFor(model => model.Da, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.DaMenor, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.DaMenor, new { htmlAttributes = new { @class = "form-control", onblur = "reemplazarPunto(this)" } })
                            @Html.ValidationMessageFor(model => model.DaMenor, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.DaMayor, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.DaMayor, new { htmlAttributes = new { @class = "form-control" }, onblur = "reemplazarPunto(this)" })
                            @Html.ValidationMessageFor(model => model.DaMayor, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.TipoSueloId, "TipoSueloId", htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.DropDownList("TipoSueloId", null, htmlAttributes: new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.TipoSueloId, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        <div class="col-md-offset-2 col-md-10">
                            <input type="submit" value="Guardar" class="btn btn-primary" />
                        </div>
                    </div>
                </div>
            </div>
        </div>
    }

</div>