@model SistemaExperto.Models.CultivoProductividad

@{
    ViewBag.Title = "Editar";
}

<!-- Estilos -->
<link href="~/Content/css/se.css" rel="stylesheet" />
<link href="~/Content/css/main.css" rel="stylesheet" />
<link href="~/Content/css/whhg.css" rel="stylesheet" />

<!-- Ruta de navegación -->
<ol class="breadcrumb">
    <li><a href="/">Inicio</a></li>
    <li><a href="~/Administracion/Index">Administración</a></li>
    <li><a href="~/Administracion/Productividad">Productividad</a></li>
    <li><a href="~/CultivoProductividad">Cultivos Productividad</a></li>
    <li class="active">Editar</li>
</ol>

<!-- Contenido -->
<div class="row col-md-10 col-md-offset-1 contenido">

    <!--Título-->
    <h2>Editar cultivo productividad</h2>
    <hr />

    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()

        <div class="form-horizontal">
          
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            @Html.HiddenFor(model => model.CultivoProductividadId)
            <div class="row">

                <div class="col-md-6">
                    <div class="form-group">
                        @Html.LabelFor(model => model.CultivoId, "CultivoId", htmlAttributes: new { @class = "control-label col-md-6" })
                        <div class="col-md-6">
                            @Html.DropDownList("CultivoId", null, htmlAttributes: new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.CultivoId, "", new { @class = "text-danger" })
                        </div>
                    </div>
               
                    <div class="form-group">
                        @Html.LabelFor(model => model.AMP, htmlAttributes: new { @class = "control-label col-md-6" })
                        <div class="col-md-6">
                            @Html.EditorFor(model => model.AMP, new { htmlAttributes = new { @class = "form-control", onblur = "reemplazarPunto(this)" } })
                            @Html.ValidationMessageFor(model => model.AMP, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    @*<div class="form-group">
                        @Html.LabelFor(model => model.ADT, htmlAttributes: new { @class = "control-label col-md-6" })
                        <div class="col-md-6">
                            @Html.EditorFor(model => model.ADT, new { htmlAttributes = new { @class = "form-control", onblur = "reemplazarPunto(this)" } })
                            @Html.ValidationMessageFor(model => model.ADT, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.AFA, htmlAttributes: new { @class = "control-label col-md-6" })
                        <div class="col-md-6">
                            @Html.EditorFor(model => model.AFA, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.AFA, "", new { @class = "text-danger" })
                        </div>
                    </div>*@

                    <div class="form-group">
                        @Html.LabelFor(model => model.KyInicial, htmlAttributes: new { @class = "control-label col-md-6" })
                        <div class="col-md-6">
                            @Html.EditorFor(model => model.KyInicial, new { htmlAttributes = new { @class = "form-control", onblur = "reemplazarPunto(this)" } })
                            @Html.ValidationMessageFor(model => model.KyInicial, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.KyDesarrollo, htmlAttributes: new { @class = "control-label col-md-6" })
                        <div class="col-md-6">
                            @Html.EditorFor(model => model.KyDesarrollo, new { htmlAttributes = new { @class = "form-control", onblur = "reemplazarPunto(this)" } })
                            @Html.ValidationMessageFor(model => model.KyDesarrollo, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.KyMedio, htmlAttributes: new { @class = "control-label col-md-6" })
                        <div class="col-md-6">
                            @Html.EditorFor(model => model.KyMedio, new { htmlAttributes = new { @class = "form-control", onblur = "reemplazarPunto(this)" } })
                            @Html.ValidationMessageFor(model => model.KyMedio, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.KyFinal, htmlAttributes: new { @class = "control-label col-md-6" })
                        <div class="col-md-6">
                            @Html.EditorFor(model => model.KyFinal, new { htmlAttributes = new { @class = "form-control", onblur = "reemplazarPunto(this)" } })
                            @Html.ValidationMessageFor(model => model.KyFinal, "", new { @class = "text-danger" })
                        </div>
                    </div>

                </div>

                <div class="col-md-6">
                    @*<div class="form-group">
                        @Html.LabelFor(model => model.KcInicial, htmlAttributes: new { @class = "control-label col-md-6" })
                        <div class="col-md-6">
                            @Html.EditorFor(model => model.KcInicial, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.KcInicial, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.KcMedio, htmlAttributes: new { @class = "control-label col-md-6" })
                        <div class="col-md-6">
                            @Html.EditorFor(model => model.KcMedio, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.KcMedio, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.KcFinal, htmlAttributes: new { @class = "control-label col-md-6" })
                        <div class="col-md-6">
                            @Html.EditorFor(model => model.KcFinal, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.KcFinal, "", new { @class = "text-danger" })
                        </div>
                    </div>*@

                    @*<div class="form-group">
                        @Html.LabelFor(model => model.inicialCC, htmlAttributes: new { @class = "control-label col-md-6" })
                        <div class="col-md-6">
                            @Html.EditorFor(model => model.inicialCC, new { htmlAttributes = new { @class = "form-control", onblur = "reemplazarPunto(this)" } })
                            @Html.ValidationMessageFor(model => model.inicialCC, "", new { @class = "text-danger" })
                        </div>
                    </div>*@

                    @*<div class="form-group">
                        @Html.LabelFor(model => model.EtapaInicial, htmlAttributes: new { @class = "control-label col-md-6" })
                        <div class="col-md-6">
                            @Html.EditorFor(model => model.EtapaInicial, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.EtapaInicial, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.EtapaDesarrollo, htmlAttributes: new { @class = "control-label col-md-6" })
                        <div class="col-md-6">
                            @Html.EditorFor(model => model.EtapaDesarrollo, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.EtapaDesarrollo, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.EtapaMedio, htmlAttributes: new { @class = "control-label col-md-6" })
                        <div class="col-md-6">
                            @Html.EditorFor(model => model.EtapaMedio, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.EtapaMedio, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.EtapaFinal, htmlAttributes: new { @class = "control-label col-md-6" })
                        <div class="col-md-6">
                            @Html.EditorFor(model => model.EtapaFinal, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.EtapaFinal, "", new { @class = "text-danger" })
                        </div>
                    </div>*@
                    @*<div class="form-group">
                        @Html.LabelFor(model => model.IndicaCalculaKCFormula, htmlAttributes: new { @class = "control-label col-md-6" })
                        <div class="col-md-6 btn-group center-block" data-toggle="buttons" id="menuIndicaKC">
                            @if (Model.IndicaCalculaKCFormula == 1)
                            {
                                <label class="btn btn-default btn-sm boton-radio active">
                                    <input type="radio" name="IndicaCalculaKCFormula" value="1" checked="checked"/>
                                    <span>Si</span>
                                </label>
                                <label class="btn btn-default btn-sm boton-radio">
                                    <input type="radio" name="IndicaCalculaKCFormula" value="0" />
                                    <span>No</span>
                                </label>
                            }
                            else
                            {
                                <label class="btn btn-default btn-sm boton-radio">
                                    <input type="radio" name="IndicaCalculaKCFormula" value="1" />
                                    <span>Si</span>
                                </label>
                                <label class="btn btn-default btn-sm boton-radio active">
                                    <input type="radio" name="IndicaCalculaKCFormula" value="0" checked="checked"/>
                                    <span>No</span>
                                </label>
                            }
                            
                        </div>
                    </div>*@
                    <!-- Botón editar -->
                    <div class="form-group">
                        <div class="col-md-12 text-center">
                            <br />
                            <input type="submit" value="Guardar" class="btn btn-primary" />
                        </div>
                    </div>

                </div>
            </div>
        </div>
    }
</div>
