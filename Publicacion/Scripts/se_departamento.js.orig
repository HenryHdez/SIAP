if (raiz.length == 1) {
    raiz = "";
}
ol.ProxyHost = raiz + "/Proxy/proxy.ashx";
var map, info, estaciones, precipitacion, feature, container, closer;

function toggleGlobo() {
    $("#globo-seleccion-municipio").toggleClass('none');
};

function switchLayer() {
    console.log("switch");
    var checkedLayer = $('#layerswitcher input[name=layer]:checked').val();
    for (i = 0, ii = layers.length; i < ii; ++i) layers[i].setVisible(i == checkedLayer);
}

$(function () { switchLayer() });
$("#layerswitcher input[name=layer]").change(function () { switchLayer() });

var base1 = new ol.layer.Tile({
    source: new ol.source.Stamen({
        layer: 'watercolor'
    })
});

var base3 = new ol.layer.Tile({
    source: new ol.source.XYZ({
        url: ol.ProxyHost + '?url=' + 'http://server.arcgisonline.com/ArcGIS/rest/services/World_Shaded_Relief/MapServer/tile/{z}/{y}/{x}'
    })
});

var base2 = new ol.layer.Tile({
    source: new ol.source.XYZ({
        url: ol.ProxyHost + '?url=' + 'http://server.arcgisonline.com/ArcGIS/rest/services/World_Imagery/MapServer/tile/{z}/{y}/{x}'
    })
});

var layers = [];
layers[0] = base1;
layers[1] = base2;
layers[2] = base3;

$(document).ready(function () {

    container = document.getElementById('popup');
    var content = document.getElementById('popup-content');
    closer = document.getElementById('popup-closer');
    var overlay = new ol.Overlay({
        element: container
    });


    function obtenerVariable(variable) {
        var query = window.location.search.substring(1);
        var vars = query.split("&");
        for (var i = 0; i < vars.length; i++) {
            var pair = vars[i].split("=");
            if (pair[0] == variable) {
                return pair[1];
            }
        }
        alert('Query Variable ' + variable + ' not found');
    }

    var highlightStyleCache = {};

    var featureOverlay = new ol.FeatureOverlay({
        map: map,
        style: function (feature, resolution) {
            if (feature) {
                l = feature.getId().split(".");
                l = l[0];
                //console.log(l);
                if (l == "municipios") {
                    var text = resolution < 5000 ? feature.get('name') : '';
                    if (!highlightStyleCache[text]) {
                        highlightStyleCache[text] = [new ol.style.Style({
                            stroke: new ol.style.Stroke({
                                color: 'rgb(115,115,115)',
                                width: 1.5
                            }),
                            fill: new ol.style.Fill({
                                color: 'rgba(255,0,0,0.5)'
                            }),
                        })];
                    }
                }
            }
            return highlightStyleCache[text];
        }
    });

    var view = new ol.View({
        projection: "EPSG:900913",
    });

    map = new ol.Map({
        target: 'map',
        view: view,
        interactions: ol.interaction.defaults({ mouseWheelZoom: false }),
        overlays: [overlay, featureOverlay],
        controls: ol.control.defaults().extend([
            new ol.control.FullScreen({ tipLabel: "Pantalla completa" }),
            new ol.control.ScaleLine(),
            new ol.control.Zoom({ zoomInTipLabel: "Acercar", zoomOutTipLabel: "Alejar" })
        ]),
        layers: [new ol.layer.Group({
            'title': 'Mapas base',
            layers: [
                new ol.layer.Tile({
                    title: 'Acuarela',
                    type: 'base',
                    visible: false,
                    source: new ol.source.Stamen({
                        layer: 'watercolor'
                    })
                }),
            new ol.layer.Tile({
                title: 'Satélite',
                type: 'base',
                visible: false,
                source: new ol.source.XYZ({
                    url: ol.ProxyHost + '?url=' + 'http://server.arcgisonline.com/ArcGIS/rest/services/World_Imagery/MapServer/tile/{z}/{y}/{x}'
                })
            }),
                new ol.layer.Tile({
                    title: 'Superficie',
                    type: 'base',
                    visible: true,
                    source: new ol.source.XYZ({
                        url: ol.ProxyHost + '?url=' + 'http://server.arcgisonline.com/ArcGIS/rest/services/World_Shaded_Relief/MapServer/tile/{z}/{y}/{x}'
                    })
                })
            ]
        })]
    });

    var layerSwitcher = new ol.control.LayerSwitcher({
        tipLabel: 'Leyenda'
    });

    map.addControl(layerSwitcher);

    //Cascos urbanos
    var js = caracteres_especiales(rutaServidor + "ows?service=WFS&version=1.0.0&request=GetFeature&typeName=Corpoica:centros_poblados&outputFormat=application/json&cql_filter=(coddpto='" + dpto + "')");
    var centros_poblados = new ol.layer.Vector({
        source: new ol.source.GeoJSON({
            projection: 'EPSG:900913',
            url: ol.ProxyHost + '?url=' + js,
        }),
        style: centros_poblados_sty
    });
    map.addLayer(centros_poblados);

    //1 - Departamentos
    var js = caracteres_especiales(rutaServidor + "ows?service=WFS&version=1.0.0&request=GetFeature&typeName=Corpoica:departamentos&outputFormat=application/json&cql_filter=(cod_depart='" + dpto + "')");
    var departamentos = new ol.layer.Vector({
        source: new ol.source.GeoJSON({
            projection: 'EPSG:900913',
            url: ol.ProxyHost + '?url=' + js,
        })
    });
    var rutaServidorProxy = ol.ProxyHost + '?url=' + js
    $(document).ready(function () {
        $.ajax(rutaServidorProxy).then(function (response) {
            console.log(departamentos.a.b.a.extent);
            map.getView().fitExtent(departamentos.a.b.a.extent, map.getSize());
        });
    });
    map.addLayer(departamentos);

    //2 - Municipios
    var js = caracteres_especiales(rutaServidor + "ows?service=WFS&version=1.0.0&request=GetFeature&typeName=Corpoica:municipios&outputFormat=application/json&cql_filter=(cod_depart='" + dpto + "')");
    var municipios = new ol.layer.Vector({
        source: new ol.source.GeoJSON({
            projection: 'EPSG:900913',
            url: ol.ProxyHost + '?url=' + js,
        }),
        style: municipios_sty
    });
    map.addLayer(municipios);

    //3 - Subzonas hidrográficas
    var js = caracteres_especiales(rutaServidor + "ows?service=WFS&version=1.0.0&request=GetFeature&typeName=Corpoica:subzonas_hidrograficas_" + dpto + "&outputFormat=application/json");
    var subzonas = new ol.layer.Vector({
        title: "subzonas_hidrograficas",
        source: new ol.source.GeoJSON({
            projection: 'EPSG:900913',
            url: ol.ProxyHost + '?url=' + js,
        }),
        visible: false,
        style: subzonas_sty
    });
<<<<<<< local

=======
>>>>>>> other
    map.addLayer(subzonas);

    //4 - Estaciones
    dptonom = dptonom.toUpperCase();
    //console.log("nombre:"+dptonom);
    var js = caracteres_especiales(rutaServidor + "ows?service=WFS&version=1.0.0&request=GetFeature&typeName=Corpoica:estaciones_climatologicas&outputFormat=application/json&cql_filter=(departamen='" + dptonom + "')");
    var estaciones = new ol.layer.Vector({
        title: "estaciones_climatologicas",
        source: new ol.source.GeoJSON({
            projection: 'EPSG:900913',
            url: ol.ProxyHost + '?url=' + js,
        }),
        visible: false,
        style: estaciones_sty
    });
    map.addLayer(estaciones);

    //5 - Precipitación media multianual
    var js = caracteres_especiales(rutaServidor + "ows?service=WFS&version=1.0.0&request=GetFeature&typeName=Corpoica:pm_multianual_" + dpto + "&outputFormat=application/json");
    var precipitacion = new ol.layer.Vector({
        title: "pm_multianual",
        source: new ol.source.GeoJSON({
            projection: 'EPSG:900913',
            url: ol.ProxyHost + '?url=' + js,
        }),
        visible: false,
        style: precipitacion_sty
    });
    map.addLayer(precipitacion);

    //6 - Conglomerados precipitación
    var js = caracteres_especiales(rutaServidor + "ows?service=WFS&version=1.0.0&request=GetFeature&typeName=Corpoica:conglomerados_precipitacion_" + dpto + "&outputFormat=application/json");
    var conglomerados = new ol.layer.Vector({
        title: "conglomerados_precipitacion",
        source: new ol.source.GeoJSON({
            projection: 'EPSG:900913',
            url: ol.ProxyHost + '?url=' + js,
        }),
        visible: false,
        style: conglomerados_sty
    });
    map.addLayer(conglomerados);

    //7 - Tmin media multianual
    var js = caracteres_especiales(rutaServidor + "ows?service=WFS&version=1.0.0&request=GetFeature&typeName=Corpoica:tmin_media_multianual_" + dpto + "&outputFormat=application/json");
    var tmin_media = new ol.layer.Vector({
        title: "tmin_media_multianual",
        source: new ol.source.GeoJSON({
            projection: 'EPSG:900913',
            url: ol.ProxyHost + '?url=' + js,
        }),
        visible: false,
        style: tmin_media_sty
    });
    map.addLayer(tmin_media);

    //8 - Tmedia multianual
    var js = caracteres_especiales(rutaServidor + "ows?service=WFS&version=1.0.0&request=GetFeature&typeName=Corpoica:tmedia_multianual_" + dpto + "&outputFormat=application/json");
    var tmedia = new ol.layer.Vector({
        title: "tmedia_multianual",
        source: new ol.source.GeoJSON({
            projection: 'EPSG:900913',
            url: ol.ProxyHost + '?url=' + js,
        }),
        visible: false,
        style: tmedia_sty
    });
    map.addLayer(tmedia);

    //9 - Tmax media multianual
    var js = caracteres_especiales(rutaServidor + "ows?service=WFS&version=1.0.0&request=GetFeature&typeName=Corpoica:tmax_media_multianual_" + dpto + "&outputFormat=application/json");
    var tmax_media = new ol.layer.Vector({
        title: "tmax_media_multianual",
        source: new ol.source.GeoJSON({
            projection: 'EPSG:900913',
            url: ol.ProxyHost + '?url=' + js,
        }),
        visible: false,
        style: tmax_media_sty
    });
    map.addLayer(tmax_media);

    //10 - Brillo solar multianual
    var js = caracteres_especiales(rutaServidor + "ows?service=WFS&version=1.0.0&request=GetFeature&typeName=Corpoica:brillo_solar_multianual_" + dpto + "&outputFormat=application/json");
    var brillo_solar = new ol.layer.Vector({
        title: "brillo_solar_multianual",
        source: new ol.source.GeoJSON({
            projection: 'EPSG:900913',
            url: ol.ProxyHost + '?url=' + js,
        }),
        visible: false,
        style: brillo_solar_sty
    });
    map.addLayer(brillo_solar);

    //var capas=new ol.layer.Group({
    //    layers:[brillo_solar]
    //});

    //map.addLayer(capas);

    //11 - Humedad relativa multianual
    var js = caracteres_especiales(rutaServidor + "ows?service=WFS&version=1.0.0&request=GetFeature&typeName=Corpoica:hum_relativa_multianual_" + dpto + "&outputFormat=application/json");
    var humedad = new ol.layer.Vector({
        title: "hum_relativa_multianual",
        source: new ol.source.GeoJSON({
            projection: 'EPSG:900913',
            url: ol.ProxyHost + '?url=' + js,
        }),
        visible: false,
        style: humedad_sty
    });
    map.addLayer(humedad);


    //12 - Evotranspiración
    var js = caracteres_especiales(rutaServidor + "ows?service=WFS&version=1.0.0&request=GetFeature&typeName=Corpoica:evotranspiracion_" + dpto + "&outputFormat=application/json");
    var evotranspiracion = new ol.layer.Vector({
        title: "evotranspiracion",
        source: new ol.source.GeoJSON({
            projection: 'EPSG:900913',
            url: ol.ProxyHost + '?url=' + js
        }),
        visible: false,
        style: evotranspiracion_sty,
    });
    map.addLayer(evotranspiracion);

    //13 - Anomalía precipitación Niño
    var js = caracteres_especiales(rutaServidor + "ows?service=WFS&version=1.0.0&request=GetFeature&typeName=Corpoica:anomalia_nino_" + dpto + "&outputFormat=application/json");
    var anomalia_p_nino = new ol.layer.Vector({
        title: "anomalia_nino",
        source: new ol.source.GeoJSON({
            projection: 'EPSG:900913',
            url: ol.ProxyHost + '?url=' + js,
        }),
        visible: false,
        style: anomalia_p_nino_sty
    });
    map.addLayer(anomalia_p_nino);

    //14 - Anomalía precipitación Niña
    var js = caracteres_especiales(rutaServidor + "ows?service=WFS&version=1.0.0&request=GetFeature&typeName=Corpoica:anomalia_nina_" + dpto + "&outputFormat=application/json");
    var anomalia_p_nina = new ol.layer.Vector({
        title: "anomalia_nina",
        source: new ol.source.GeoJSON({
            projection: 'EPSG:900913',
            url: ol.ProxyHost + '?url=' + js,
        }),
        visible: false,
        style: anomalia_p_nina_sty
    });
    map.addLayer(anomalia_p_nina);

    //15 - Anomalía tmin Niña
    var js = caracteres_especiales(rutaServidor + "ows?service=WFS&version=1.0.0&request=GetFeature&typeName=Corpoica:anomalia_tmin_nina_" + dpto + "&outputFormat=application/json");
    var anomalia_tmin_nina = new ol.layer.Vector({
        title: "anomalia_tmin_nina",
        source: new ol.source.GeoJSON({
            projection: 'EPSG:900913',
            url: ol.ProxyHost + '?url=' + js,
        }),
        visible: false,
        style: anomalia_t_sty
    });
    map.addLayer(anomalia_tmin_nina);

    //16 - Anomalía tmin Niño
    var js = caracteres_especiales(rutaServidor + "ows?service=WFS&version=1.0.0&request=GetFeature&typeName=Corpoica:anomalia_tmin_nino_" + dpto + "&outputFormat=application/json");
    var anomalia_tmin_nino = new ol.layer.Vector({
        title: "anomalia_tmin_nino",
        source: new ol.source.GeoJSON({
            projection: 'EPSG:900913',
            url: ol.ProxyHost + '?url=' + js,
        }),
        visible: false,
        style: anomalia_t_sty
    });
    map.addLayer(anomalia_tmin_nino);

    //17 - Anomalía tmax Niña
    var js = caracteres_especiales(rutaServidor + "ows?service=WFS&version=1.0.0&request=GetFeature&typeName=Corpoica:anomalia_tmax_nina_" + dpto + "&outputFormat=application/json");
    var anomalia_tmax_nina = new ol.layer.Vector({
        title: "anomalia_tmax_nina",
        source: new ol.source.GeoJSON({
            projection: 'EPSG:900913',
            url: ol.ProxyHost + '?url=' + js,
        }),
        visible: false,
        style: anomalia_t_sty
    });
    map.addLayer(anomalia_tmax_nina);

    //18 - Anomalía tmax Niño
    var js = caracteres_especiales(rutaServidor + "ows?service=WFS&version=1.0.0&request=GetFeature&typeName=Corpoica:anomalia_tmax_nino_" + dpto + "&outputFormat=application/json");
    var anomalia_tmax_nino = new ol.layer.Vector({
        title: "anomalia_tmax_nino",
        source: new ol.source.GeoJSON({
            projection: 'EPSG:900913',
            url: ol.ProxyHost + '?url=' + js,
        }),
        visible: false,
        style: anomalia_t_sty
    });
    map.addLayer(anomalia_tmax_nino);

    //19 - Exceso hídrico
    var js = caracteres_especiales(rutaServidor + "ows?service=WFS&version=1.0.0&request=GetFeature&typeName=Corpoica:exceso_" + dpto + "&outputFormat=application/json");
    var exceso_hidrico = new ol.layer.Vector({
        title: "exceso",
        source: new ol.source.GeoJSON({
            projection: 'EPSG:900913',
            url: ol.ProxyHost + '?url=' + js,
        }),
        visible: false,
        style: exceso_deficit_sty
    });
    map.addLayer(exceso_hidrico);

    //20 - Déficit hídrico
    var js = caracteres_especiales(rutaServidor + "ows?service=WFS&version=1.0.0&request=GetFeature&typeName=Corpoica:deficit_" + dpto + "&outputFormat=application/json");
    var deficit_hidrico = new ol.layer.Vector({
        title: "deficit",
        source: new ol.source.GeoJSON({
            projection: 'EPSG:900913',
            url: ol.ProxyHost + '?url=' + js,
        }),
        visible: false,
        style: exceso_deficit_sty
    });
    map.addLayer(deficit_hidrico);

    //21 - Inundación susceptibilidad
    var js = caracteres_especiales(rutaServidor + "ows?service=WFS&version=1.0.0&request=GetFeature&typeName=Corpoica:inundacion_susceptibilidad_" + dpto + "&outputFormat=application/json");
    var inundacion_susceptibilidad = new ol.layer.Vector({
        title: "inundacion_susceptibilidad",
        source: new ol.source.GeoJSON({
            projection: 'EPSG:900913',
            url: ol.ProxyHost + '?url=' + js,
        }),
        visible: false,
        style: inundacion_susceptibilidad_sty
    });
    map.addLayer(inundacion_susceptibilidad);

    //22 - Inundación 2010 2011 IGAC
    var js = caracteres_especiales(rutaServidor + "ows?service=WFS&version=1.0.0&request=GetFeature&typeName=Corpoica:inundacion_2010_2011_igac_" + dpto + "&outputFormat=application/json");
    var inundacion_2010_2011 = new ol.layer.Vector({
        title: "inundacion_2010_2011_igac",
        source: new ol.source.GeoJSON({
            projection: 'EPSG:900913',
            url: ol.ProxyHost + '?url=' + js,
        }),
        visible: false,
        style: inundacion_2010_2011_sty
    });
    map.addLayer(inundacion_2010_2011);

    //23 - Textos
<<<<<<< local
    var fuenteTextos = new ol.source.XYZ({
        url: ol.ProxyHost + '?url=' + 'http://tile.openstreetmap.se/hydda/roads_and_labels/{z}/{x}/{y}.png'
    });
=======
>>>>>>> other
    var texto = new ol.layer.Tile({
        source: new ol.source.XYZ({
            url: ol.ProxyHost + '?url=' + 'http://tile.openstreetmap.se/hydda/roads_and_labels/{z}/{x}/{y}.png'
        })
    });
    map.addLayer(texto);

    ////24 - Radios
    //var vectorSource = new ol.source.Vector();
    //var radios = new ol.layer.Vector({
    //    source: vectorSource
    //});
    ////map.addLayer(radios);

    //var radius = 80000000;
    //var circle = new ol.geom.Circle(
    //    ol.proj.transform(['0', '0'], 'EPSG:4326', 'EPSG:900913'),
    //    8000000,
    //    'XY'
    //)
    ////vectorSource.addFeature(new ol.Feature(circle));

    ////console.log(circle);
    ////console.log(radios);

    var highlight;
    var displayFeatureInfo = function (pixel) {
        feature = map.forEachFeatureAtPixel(pixel, function (feature, vectorLayer) {
            return feature;
        });
        //if (feature) {
        //    for (i = 0; i < munV.length; i++) {
        //        if (feature.get('coddanemun') == munV[i]) {
        //            window.open("../Regional/Municipio?codigoDane=" + feature.get('coddanemun'), "_parent");
        //        }
        //    }
        //}
        l = feature.T.split(".");
        l = l[0];
        if (l == "estaciones_climatologicas") {
            closer.onclick = function cerrar_popup() {
                featureOverlay.removeFeature(highlight)
                container.style.display = 'none';
                closer.blur();
            };
            if (feature) {
                box = feature.p.geometry.extent;
                var coordinate = map.getCoordinateFromPixel(pixel);
                overlay.setPosition(coordinate);
                var coord = ol.coordinate.toStringHDMS(ol.proj.transform(coordinate, 'EPSG:3857', 'EPSG:4326'));
                lnk = feature.get('nombre') + "</br><code>" + coord + "</code></br>Altitud: " + feature.get('altitud') + "</br>Código IDEAM: " + feature.get('codigo');
                content.innerHTML = lnk;
                container.style.display = 'block';
                if (feature !== highlight) {
                    if (highlight) {
                        featureOverlay.removeFeature(highlight);
                        highlightStyleCache = {};
                    }
                    if (feature) {
                        featureOverlay.addFeature(feature);
                    }
                    highlight = feature;
                } else {
                    featureOverlay.removeFeature(highlight);
                    highlightStyleCache = {};
                    featureOverlay.addFeature(feature);
                }
            } else {
                if (highlight) {
                    featureOverlay.removeFeature(highlight);
                    highlightStyleCache = {};
                    container.style.display = 'none';
                    closer.blur();
                }
            }
        }
    };

    map.on('click', function (evt) {
        displayFeatureInfo(evt.pixel);
    });

    //var sidebar = $('#sidebar').sidebar();

    var exportPNGElement = document.getElementById('export-png');
    console.log(exportPNGElement);

    if ('download' in exportPNGElement) {
        exportPNGElement.addEventListener('click', function (e) {
            map.once('postcompose', function (event) {
                var canvas = event.context.canvas;
                console.log(event);
                exportPNGElement.href = canvas.toDataURL('image/png');
            });
            map.renderSync();
        }, false);
    } else {
        var info = document.getElementById('no-download');
        /**
         * display error message
         */
        info.style.display = '';
    }

});

function omitirAcentos(text) {
    var acentos = "ÁÉÍÓÚÜÑáéíóúüñ";
    var original = "AEIOUUNaeiouun";
    for (var i = 0; i < acentos.length; i++) {
        text = text.replace(acentos.charAt(i), original.charAt(i));
    }
    return text;
}

function caracteres_especiales(url) {

    var chars = [' ', '<', '>', '#', '%', '~', '/', '|', ';', ':', '=', '?', '&'];
    var source = url;
    var dest = "";
    for (var i = 0; i < source.length; i++) {
        var c = source.charAt(i);
        var found = 0;
        for (var j = 0; (!found) && (j < chars.length) ; j++) {
            if (chars[j] == c) {
                found = 1;
            }
        }
        if (found) {
            dest += "%" + source.charCodeAt(i).toString(16);
        } else {
            dest += c;
        }
    }
    return dest;
}

function removeA(arr) {
    var what, a = arguments, L = a.length, ax;
    while (L > 1 && arr.length) {
        what = a[--L];
        while ((ax = arr.indexOf(what)) != -1) {
            arr.splice(ax, 1);
        }
    }
    return arr;
}


function cambiarCapa(capa) {
    capas = map.getLayers();
    //console.log(capas);
    j = capas.Qa.src.p.length - 2;
    for (i = 3; i <= j; i++) {
        //console.log(i);
        t = capas.a[i].Qa.src.p.title;
<<<<<<< local
        console.log(t);
=======
        //if (capas.a[i].Qa.src.a.b.a.a[0].value !== null) {
        //    t = capas.a[i].Qa.src.a.b.a.a[0].value.T;
        //} else {
        //    t = "estaciones_climatologicas_08.1";
        //}
        //t = t.substring(0, t.length - 5);
>>>>>>> other
        if (capa == t) break;
    }
    //console.log("F:" + i);
    if (capa == t) {
        //console.log(i);
        v = capas.a[i].getVisible();
<<<<<<< local
        console.log('capa seleccionada: ' + t);
        //console.log(subcapa.Qasrc.a.e[0]);

        //var fuente = subcapa.getSource();
        //fuente.forEachFeature(function (region) {
        //    listaConvenciones.push(region.get('nomszh').toString());
        //    //console.log(listaConvenciones[0]);
        //});

        // document.getElementById("prueba").innerHTML = listaConvenciones[0];

=======
        //console.log(t);
        //console.log(capa);
        //console.log(v);
>>>>>>> other
        apagarCapas(i);
        if (v == true) {
            capas.a[i].setVisible(false);
        } else {
            console.log(i + capa);
            capas.a[i].setVisible(true);
        }
        container.style.display = 'none';
    }
    else {
        apagarCapas(0);
    }
    closer.blur();
    $('#cont').removeClass('none');
    $('#departamento').addClass('none');
    var cuadros = ['#subzonas', '#estaciones', '#pre-multianual', '#conglomerados', '#temp-multianual',
        '#temperatura-minima', '#temperatura-media', '#temperatura-maxima', '#brillo', '#evapotranspiracion',
        '#humedad', '#anomalia-p', '#anomalia-p-nina', '#anomalia-p-nino', '#anomalia-t', '#anomalia-t-min-nino',
        '#anomalia-t-min-nina', '#anomalia-t-max-nino', '#anomalia-t-max-nina', '#frecuencia', '#frecuencia-exceso',
        '#frecuencia-deficit', '#susceptibilidad', '#susceptibilidad-inundacion', '#susceptibilidad-igac'];
    var iconos = ['#icono-subzonas', '#icono-estaciones', '#icono-pre-multianual', '#icono-conglomerados',
        '#icono-temp-multianual', '#icono-brillo', '#icono-evapotranspiracion', '#icono-humedad',
        '#icono-anomalia-p', '#icono-anomalia-t', '#icono-frecuencia', '#icono-susceptibilidad'];
    var cuadrosVisibles = [];
    var iconosVisibles = [];
    var filtro = '';
    switch (capa) {
        case 2:
            $('#departamento').removeClass('none');
            break;
        case 'subzonas_hidrograficas':
            //$('#icono-subzonas').removeClass('icono-sombra');
            //$('#icono-subzonas').addClass('icono-normal');
            cuadrosVisibles.push('#subzonas');
            iconosVisibles.push('#icono-subzonas');
            break;
        case 'estaciones_climatologicas':
            cuadrosVisibles.push('#estaciones');
            iconosVisibles.push('#icono-estaciones');
            break;
        case 'pm_multianual':
            cuadrosVisibles.push('#pre-multianual');
            iconosVisibles.push('#icono-pre-multianual');
            break;
        case 'conglomerados_precipitacion':
            cuadrosVisibles.push('#conglomerados');
            iconosVisibles.push('#icono-conglomerados');
            break;

        case 'temp-multianual':
            cuadrosVisibles.push('#temp-multianual');
            iconosVisibles.push('#icono-temp-multianual');
            $('#boton-temp-minima').removeClass('active');
            $('#boton-temp-maxima').removeClass('active');
            $('#boton-temp-media').removeClass('active');
            break;
        case 'tmin_media_multianual':
            $('#temp-multianual').addClass('none');
            $('#icono-temp-multianual').removeClass('icono-sombra');
            cuadrosVisibles.push('#temp-multianual');
            cuadrosVisibles.push('#temperatura-minima');
            iconosVisibles.push('#icono-temp-multianual');
            break;
        case 'tmedia_multianual':
            $('#temp-multianual').addClass('none');
            $('#icono-temp-multianual').removeClass('icono-sombra');
            cuadrosVisibles.push('#temp-multianual');
            cuadrosVisibles.push('#temperatura-media');
            iconosVisibles.push('#icono-temp-multianual');
            break;
        case 'tmax_media_multianual':
            $('#temp-multianual').addClass('none');
            $('#icono-temp-multianual').removeClass('icono-sombra');
            cuadrosVisibles.push('#temp-multianual');
            cuadrosVisibles.push('#temperatura-maxima');
            iconosVisibles.push('#icono-temp-multianual');
            break;
        case 'brillo_solar_multianual':
            cuadrosVisibles.push('#brillo');
            iconosVisibles.push('#icono-brillo');
            break;
        case 'evotranspiracion':
            cuadrosVisibles.push('#evapotranspiracion');
            iconosVisibles.push('#icono-evapotranspiracion');
            break;
        case 'hum_relativa_multianual':
            cuadrosVisibles.push('#humedad');
            iconosVisibles.push('#icono-humedad');
            break;

        case 'anomalia_p':
            cuadrosVisibles.push('#anomalia-p');
            iconosVisibles.push('#icono-anomalia-p');
            $('#boton-anomalia-p-nino').removeClass('active');
            $('#boton-anomalia-p-nina').removeClass('active');
            break;
        case 'anomalia_nino':
            $('#anomalia-p').addClass('none');
            $('#icono-anomalia-p').removeClass('icono-sombra');
            cuadrosVisibles.push('#anomalia-p');
            cuadrosVisibles.push('#anomalia-p-nino');
            iconosVisibles.push('#icono-anomalia-p');
            break;
        case 'anomalia_nina':
            $('#anomalia-p').addClass('none');
            $('#icono-anomalia-p').removeClass('icono-sombra');
            cuadrosVisibles.push('#anomalia-p');
            cuadrosVisibles.push('#anomalia-p-nina');
            iconosVisibles.push('#icono-anomalia-p');
            break;

        case 'anomalia_t':
            cuadrosVisibles.push('#anomalia-t');
            iconosVisibles.push('#icono-anomalia-t');
            $('#boton-anomalia-t-min-nino').removeClass('active');
            $('#boton-anomalia-t-min-nina').removeClass('active');
            $('#boton-anomalia-t-max-nino').removeClass('active');
            $('#boton-anomalia-t-max-nina').removeClass('active');
            break;
        case 'anomalia_tmin_nina':
            $('#anomalia-t').addClass('none');
            $('#icono-anomalia-t').removeClass('icono-sombra');
            cuadrosVisibles.push('#anomalia-t');
            cuadrosVisibles.push('#anomalia-t-min-nina');
            iconosVisibles.push('#icono-anomalia-t');
            break;
        case 'anomalia_tmin_nino':
            $('#anomalia-t').addClass('none');
            $('#icono-anomalia-t').removeClass('icono-sombra');
            cuadrosVisibles.push('#anomalia-t');
            cuadrosVisibles.push('#anomalia-t-min-nino');
            iconosVisibles.push('#icono-anomalia-t');
            break;
        case 'anomalia_tmax_nina':
            $('#anomalia-t').addClass('none');
            $('#icono-anomalia-t').removeClass('icono-sombra');
            cuadrosVisibles.push('#anomalia-t');
            cuadrosVisibles.push('#anomalia-t-max-nina');
            iconosVisibles.push('#icono-anomalia-t');
            break;
        case 'anomalia_tmax_nino':
            $('#anomalia-t').addClass('none');
            $('#icono-anomalia-t').removeClass('icono-sombra');
            cuadrosVisibles.push('#anomalia-t');
            cuadrosVisibles.push('#anomalia-t-max-nino');
            iconosVisibles.push('#icono-anomalia-t');
            break;

        case 'frecuencia':
            cuadrosVisibles.push('#frecuencia');
            iconosVisibles.push('#icono-frecuencia');
            $('#boton-frecuencia-exceso').removeClass('active');
            $('#boton-frecuencia-deficit').removeClass('active');
            break;
        case 'exceso':
            $('#frecuencia').addClass('none');
            $('#icono-frecuencia').removeClass('icono-sombra');
            cuadrosVisibles.push('#frecuencia');
            cuadrosVisibles.push('#frecuencia-exceso');
            iconosVisibles.push('#icono-frecuencia');
            break;
        case 'deficit':
            $('#frecuencia').addClass('none');
            $('#icono-frecuencia').removeClass('icono-sombra');
            cuadrosVisibles.push('#frecuencia');
            cuadrosVisibles.push('#frecuencia-deficit');
            iconosVisibles.push('#icono-frecuencia');
            break;

        case 'susceptibilidad':
            cuadrosVisibles.push('#susceptibilidad');
            iconosVisibles.push('#icono-susceptibilidad');
            $('#boton-susceptibilidad-inundacion').removeClass('active');
            $('#boton-susceptibilidad-igac').removeClass('active');
            break;
        case 'inundacion_susceptibilidad':
            $('#susceptibilidad').addClass('none');
            $('#icono-susceptibilidad').removeClass('icono-sombra');
            cuadrosVisibles.push('#susceptibilidad');
            cuadrosVisibles.push('#susceptibilidad-inundacion');
            iconosVisibles.push('#icono-susceptibilidad');
            break;
        case 'inundacion_2010_2011_igac':
            $('#susceptibilidad').addClass('none');
            $('#icono-susceptibilidad').removeClass('icono-sombra');
            cuadrosVisibles.push('#susceptibilidad');
            cuadrosVisibles.push('#susceptibilidad-igac');
            iconosVisibles.push('#icono-susceptibilidad');
    }

    for (var cv = 0; cv < iconosVisibles.length; cv++) {
        $(iconosVisibles[cv]).toggleClass('icono-sombra');
        if ($(iconosVisibles[cv]).hasClass('icono-sombra')) {
            $('.contenedor-caja-flecha').addClass('none');
            $('#cont').removeClass('none');
        }
        else {
            $('.contenedor-caja-flecha').removeClass('none');
            $('#cont').addClass('none');
        }
        iconos = removeA(iconos, iconosVisibles[cv])
    };

<<<<<<< local
    for (var cv = 0; cv < cuadrosVisibles.length; cv++) {
        //console.log('cuadro visible: ' + cuadrosVisibles[cv]);
        $(cuadrosVisibles[cv]).toggleClass('none');
        cuadros = removeA(cuadros, cuadrosVisibles[cv]);
    };

=======
    for (var cv = 0; cv < cuadrosVisibles.length; cv++) {
        console.log('cuadro visible: ' + cuadrosVisibles[cv]);
        $(cuadrosVisibles[cv]).toggleClass('none');
        cuadros = removeA(cuadros, cuadrosVisibles[cv]);
    };

>>>>>>> other
    for (var c = 0; c < cuadros.length; c++) {
        console.log('cuadro oculto: ' + cuadros[c]);
        $(cuadros[c]).addClass('none');
        $(iconos[c]).removeClass('icono-sombra');
    };
}

function apagarCapas(capa) {
    //console.log(capas);
    j = capas.Qa.src.p.length - 2;
    //console.log(j);
    for (k = 4; k <= j; k++) {
        if (k != capa) {
            capas.a[k].setVisible(false);
        }
    }
}

$(document).ready(function () {
    "use strict";
    $('#link_open').on('click', function () {
        if ($('#link_open').hasClass("clooses")) {
            $("#open_span").removeClass("close_span").addClass("open_span");
            $("#profile").removeClass("profile_closed");
            $("#link_open").removeClass("clooses");
            $("#cont").addClass("none");
        }
        else {
            $("#open_span").addClass("close_span").removeClass("open_span");
            $("#profile").addClass("profile_closed");
            $("#link_open").addClass("clooses");
            $("#cont").removeClass("none");
        }
    })
    $('#map_open').on('click', function () {
        "use strict";
        $("#cont").addClass("none");
        $("#Show_cont").removeClass("none");
    })
    $('#Show_cont').on('click', function () {
        "use strict";
        $("#Show_cont").addClass("none");
        $("#cont").removeClass("none");
    })
});

//$(function () {
//    "use strict";
//    $("#owl-demo, #myguest").owlCarousel({
//        items: 6,
//        itemsDesktop: [1000, 5],
//        itemsDesktopSmall: [900, 6],
//        itemsTablet: [600, 2],
//        itemsMobile: false
//    });
//});
