@model TerminoViewModel

@{
    ViewBag.Title = "Arbol";
}

<style>
    .modal-dialog {
        width: 80%;
    }

    .icono-fila {
        font-size: 0.8em;
    }

    .color-aguamarina {
        color: #00A99D;
    }

    .color-azul {
        color: #0071BC;
    }

    .color-naranja {
        color: #F77B1E;
    }

    .color-morada {
        color: #93278F;
    }

    .color-verde {
        color: #8CC63F;
    }

    .color-rojo {
        color: #ED1E79;
    }

    .boton-termino {
        color: white;
        width: 90%;
        font-weight: bold;
    }

        .boton-termino:visited, .boton-termino:hover, .boton-termino:active, .boton-termino:focus {
            color: white;
            font-weight: normal;
        }

    .boton-termino-hijo {
        color: white;
        width: 90%;
        opacity: 0.75;
        font-weight: normal;
    }

        .boton-termino-hijo:visited, .boton-termino-hijo:hover, .boton-termino-hijo:active, .boton-termino-hijo:focus {
            color: white;
            font-weight: bold;
        }

    .boton-termino-nieto {
        color: white;
        width: 80%;
        opacity: 0.5;
        font-weight: normal;
    }

        .boton-termino-nieto:visited, .boton-termino-nieto:hover, .boton-termino-nieto:active, .boton-termino-nieto:focus {
            color: white;
            font-weight: bold;
        }

    .fondo-aguamarina {
        background-color: #00A99D;
    }

    .fondo-azul {
        background-color: #0071BC;
    }

    .fondo-naranja {
        background-color: #F77B1E;
    }

    .fondo-morada {
        background-color: #93278F;
    }

    .fondo-verde {
        background-color: #8CC63F;
    }

    .fondo-rojo {
        background-color: #ED1E79;
    }

    .caja-busqueda {
        background-color: lightgray;
        color: white;
    }

        .caja-busqueda::-webkit-input-placeholder {
            color: white;
        }

        .caja-busqueda::-moz-placeholder {
            color: white;
        }

        .caja-busqueda:-ms-input-placeholder {
            color: white;
        }

    .definicion {
        /*margin-right: 2px;*/
    }

    .definicion-amplia {
        overflow: hidden;
        text-overflow: ellipsis;
    }

    .icono-ver {
        padding-left: 5px;
        color: gray;
    }

        .icono-ver:hover, icono-ver:active, icono-ver:focus {
            padding-left: 5px;
            color: #9E005D;
        }

    .flotar {
        float: left;
        /*position: absolute;*/
        z-index: 100;
        background-color: white;
        border: 1px solid #9E005D;
        border-radius: 10px;
        /*left: 380px;*/
    }
</style>

<script>
    var terminosPadre = @Html.Raw(Json.Encode(Model.TerminosPadre));
    var terminosHijo = @Html.Raw(Json.Encode(Model.TerminosHijo));
    var terminosNieto = @Html.Raw(Json.Encode(Model.TerminosNieto));
</script>

<ol class="breadcrumb">
    <!--<li><a href="~/Inicio/">Inicio</a></li>-->
    <li><a href="~/Inicio/Submenu">Menú</a></li>
    <li><a href="~/Termino/InicioVideos">Inicio glosario</a></li>
    <li class="active">Glosario</li>
</ol>
<!-- Contenido -->

@functions {
    string CortarCaracteres(string texto, int cantidad)
    {
        if (texto.Length > cantidad)
        {
            texto = texto.Substring(0, cantidad);
            texto = texto.Substring(0, Math.Min(texto.Length, texto.LastIndexOf(" "))) + "...";
        }
        return texto;
    }
}

    <!--Título-->
<div class="col-md-12 text-center" style="height:100px; padding-top:15px; padding-bottom:20px;">
    <span class="color-texto-productividad" style="font-size:2em;">
        Módulo de  <strong>glosario</strong>
        <img style="height:70px;" src="~/Content/imagenes/iconos/glosario.png" />
    </span>
</div>
<div class="col-md-12" style="margin-bottom:15px;">
    <input class="form-control" type="text" id="texto-filtro" onkeyup="filtrarTermino()" placeholder="Buscar términos..." style="margin: 0 auto; float: none;">
</div>


    @{
        int contadorFilas = 0;
        string nombreClaseIcono = "";
        string nombreClaseBoton = "";
        foreach (var terminoPadre in Model.TerminosPadre)
        {
            if (contadorFilas == 6)
            {
                contadorFilas = 0;
            }
            switch (contadorFilas)
            {
                case 0:
                    nombreClaseIcono = "color-aguamarina";
                    nombreClaseBoton = "fondo-aguamarina";
                    break;
                case 1:
                    nombreClaseIcono = "color-azul";
                    nombreClaseBoton = "fondo-azul";
                    break;
                case 2:
                    nombreClaseIcono = "color-naranja";
                    nombreClaseBoton = "fondo-naranja";
                    break;
                case 3:
                    nombreClaseIcono = "color-morada";
                    nombreClaseBoton = "fondo-morada";
                    break;
                case 4:
                    nombreClaseIcono = "color-verde";
                    nombreClaseBoton = "fondo-verde";
                    break;
                case 5:
                    nombreClaseIcono = "color-rojo";
                    nombreClaseBoton = "fondo-rojo";
                    break;
            }

            <div class="col-md-12" style="border-bottom:2px dotted grey; padding-top:10px; padding-bottom:10px;" id="termino-busqueda_@terminoPadre.NombreTermino">
                <div class="col-md-12">
                    <div class="col-md-3">
                        <div class="col-md-12 text-center">
                            <button type="button" class="col-md-4 btn btn-md boton-termino @nombreClaseBoton" data-toggle="collapse" href="#collapseExample_@terminoPadre.Codigo" aria-expanded="false" aria-controls="collapseExample_@terminoPadre.Codigo" onclick="mostrarInformacion(@terminoPadre.TerminoId,0)">
                                @if (terminoPadre.NombreTermino.Length > 30)
                                {
                                    <span>@CortarCaracteres(terminoPadre.NombreTermino, 27)</span>
                                }
                                else
                                {
                                    <span>@terminoPadre.NombreTermino</span>
                                }     
                            </button>
                            <!--Descarga de PDF-->
                            <a class="fa fa-arrow-circle-o-down oculto" href="../Termino/AccionInforme/@terminoPadre.TerminoId" id="descarga-padre-@terminoPadre.TerminoId" title="Descargar PDF"> </a>
                        </div>
                    </div>

                    <div class="col-md-9">
                        <div class="col-md-4 text-center">
                            <span class="fa fa-circle icono-fila @nombreClaseIcono"></span> Definición breve
                        </div>
                        <div class="col-md-4 text-center">
                            <span class="fa fa-circle icono-fila @nombreClaseIcono"></span> Definición amplia
                        </div>
                        <div class="col-md-2 text-center">
                            <span class="fa fa-circle icono-fila @nombreClaseIcono"></span> Fuente
                        </div>
                        <div class="col-md-2 text-center">
                            <span class="fa fa-circle icono-fila @nombreClaseIcono"></span> Inf. de apoyo
                        </div>
                    </div>
                </div>

                <div class="collapse col-md-12" id="collapseExample_@terminoPadre.Codigo">
                    <div class="col-md-3" style="min-height:110px;">
                        <div class="col-md-12 text-center">
                            @foreach (var terminoHijo in Model.TerminosHijo.Where(t => t.CodigoPadreId == terminoPadre.TerminoId))
                            {
                                <div style="height: 40px;">
                                    <button type="button" class="col-md-4 btn btn-md boton-termino-hijo @nombreClaseBoton" style="margin-bottom:2px;" onclick="mostrarInformacion(@terminoHijo.TerminoId,1)">
                                        @if (terminoHijo.NombreTermino.Length > 30)
                                        {
                                            <span>@CortarCaracteres(terminoHijo.NombreTermino, 27)</span>
                                        }
                                        else
                                        {
                                            <span>@terminoHijo.NombreTermino</span>
                                        }

                                    </button>

                                    <!--Descarga de PDF-->
                                    <a class="fa fa-arrow-circle-o-down oculto" href="../Termino/AccionInforme/@terminoHijo.TerminoId" id="descarga-hijo-@terminoHijo.TerminoId" title="Descargar PDF"> </a>
                                </div>

                                foreach (var terminoNieto in Model.TerminosNieto.Where(t => t.CodigoPadreId == terminoHijo.TerminoId))
                                {
                                    <div style="height: 40px;">
                                        <button type="button" class="col-md-offset-1 col-md-4 btn btn-md boton-termino-nieto @nombreClaseBoton" style="margin-bottom:2px;" onclick="mostrarInformacion(@terminoNieto.TerminoId,2)">
                                            @if (terminoNieto.NombreTermino.Length > 30)
                                            {
                                                <span>@CortarCaracteres(terminoNieto.NombreTermino, 27)</span>
                                            }
                                            else
                                            {
                                                <span>@terminoNieto.NombreTermino</span>
                                            }
                                        </button>

                                        <!--Descarga de PDF-->
                                        <a class="fa fa-arrow-circle-o-down oculto" href="../Termino/AccionInforme/@terminoNieto.TerminoId" title="Descargar PDF" id="descarga-nieto-@terminoNieto.TerminoId"> </a>
                                    </div>
                                }
                            }
                        </div>
                    </div>
                    <div class="col-md-9">
                        <div class="col-md-4 definicion" id="definicion-breve-@terminoPadre.TerminoId">
                        </div>
                        <div class="col-md-4 definicion" id="definicion-amplia-@terminoPadre.TerminoId">
                        </div>
                        <div class="col-md-2 definicion" id="fuente-@terminoPadre.TerminoId">
                        </div>
                        <div class="col-md-2 definicion" id="apoyo-@terminoPadre.TerminoId">
                        </div>
                    </div>
                </div>

            </div>
            contadorFilas++;
        }
    }

<script type='text/javascript'>
    $("#Modal-@ViewBag.CodigoTerminoInicial").modal()

    var cortarCaracteres = function (texto, cantidad) {
        if (texto.length > cantidad)
        {
            texto = texto.substring(0, cantidad);
            texto = texto.substring(0, Math.min(texto.length, texto.lastIndexOf(" "))) + "...";
        }
        return texto;
    }

    var posicionPadreDescarga=0;
    var posicionHijoDescarga=0;
    var posicionNietoDescarga=0;

    var mostrarInformacion = function(codigo, nivel) {

        var codigoDiv=0;
        var definicionBreve="";
        var definicionAmplia="";
        var fuente="";
        var apoyo="";

        if (nivel == 0)
        {
            for (var i=0;i<terminosPadre.length;i++)
            {
                if (terminosPadre[i].TerminoId===codigo)
                {
                    codigoDiv=terminosPadre[i].TerminoId;
                    definicionBreve=terminosPadre[i].DefinicionBreve;
                    definicionAmplia=terminosPadre[i].DefinicionAmplia;
                    fuente=terminosPadre[i].Fuente;
                    apoyo=agregarReferenciaApoyo(terminosPadre[i].InformacionApoyo);
                    ocultarBotonesDescarga(posicionPadreDescarga,posicionHijoDescarga,posicionNietoDescarga);
                    $('#descarga-padre-'+codigo).removeClass('oculto');
                    posicionPadreDescarga = codigo;
                    break;
                }
            }
        }
        else if (nivel == 1)
        {
            for (var i=0;i<terminosHijo.length;i++)
            {
                if (terminosHijo[i].TerminoId==codigo)
                {
                    codigoDiv=terminosHijo[i].CodigoPadreId;
                    definicionBreve=terminosHijo[i].DefinicionBreve;
                    definicionAmplia=terminosHijo[i].DefinicionAmplia;
                    fuente=terminosHijo[i].Fuente;
                    apoyo=agregarReferenciaApoyo(terminosHijo[i].InformacionApoyo);
                    ocultarBotonesDescarga(posicionPadreDescarga,posicionHijoDescarga,posicionNietoDescarga);
                    $('#descarga-hijo-'+codigo).removeClass('oculto');
                    posicionHijoDescarga = codigo;
                    break;
                }
            }
        }
        else
        {
            for (var i=0;i<terminosNieto.length;i++)
            {
                if (terminosNieto[i].TerminoId==codigo)
                {
                    for (var j=0;j<terminosHijo.length;j++)
                    {
                        if(terminosNieto[i].CodigoPadreId==terminosHijo[j].TerminoId)
                        {
                            codigoDiv=terminosHijo[j].CodigoPadreId;
                            break;
                        }
                    }
                    definicionBreve=terminosNieto[i].DefinicionBreve;
                    definicionAmplia=terminosNieto[i].DefinicionAmplia;
                    fuente=terminosNieto[i].Fuente;
                    apoyo=agregarReferenciaApoyo(terminosNieto[i].InformacionApoyo);
                    ocultarBotonesDescarga(posicionPadreDescarga,posicionHijoDescarga,posicionNietoDescarga);
                    $('#descarga-nieto-'+codigo).removeClass('oculto');
                    posicionNietoDescarga = codigo;
                    break;
                }
            }
        }

        $("#definicion-breve-"+codigoDiv).html(definicionBreve);
        $("#definicion-amplia-"+codigoDiv).html(definicionAmplia);
        $("#fuente-"+codigoDiv).html(fuente);
        $("#apoyo-"+codigoDiv).html(apoyo);
        cortarTextos();
    }

    var ocultarBotonesDescarga = function(codigoPadre,codigoHijo,codigoNieto)
    {
        $('#descarga-padre-'+ codigoPadre).addClass('oculto');
        $('#descarga-hijo-'+ codigoHijo).addClass('oculto');
        $('#descarga-nieto-'+ codigoNieto).addClass('oculto');
    }

    function agregarReferenciaApoyo(enlace)
    {
        return '<a href="'+enlace+'" target="_blank">'+enlace+'</a>';
    };
</script>
<script>
    var cortarTextos = function(){
        var minimized_elements = $('.definicion');
        minimized_elements.each(function(){
            var t = $(this).text();
            $(this).removeClass("flotar");
            if(t.length < 200) return;
            var texto = t.substring(0, 200);
            var posicionCorte =  Math.min(texto.length, texto.lastIndexOf(" "));
            texto = texto.substring(0,posicionCorte);
            $(this).html(
                texto+'<a href="#" class="ver-mas"><i class="fa fa-arrow-circle-right icono-ver"></i></a>'+
                '<span style="display:none;">'+ t.slice(posicionCorte,t.length)+' <a href="#" class="ver-menos"><i class="fa fa-arrow-circle-left icono-ver"></i></a></span>'
            );
        });
        $('a.ver-mas', minimized_elements).click(function(event){
            event.preventDefault();
            var posicion = $(this).parent().position();
            $(this).parent().addClass("flotar");
            $(this).hide().prev().hide();
            $(this).next().show();
        });
        $('a.ver-menos', minimized_elements).click(function(event){
            event.preventDefault();
            $(this).parent().parent().removeClass("flotar");
            $(this).parent().hide().prev().show().prev().show();
        });
    };
</script>
<script>
    function filtrarTermino() {
        var input, filter, ul, a, i;
        input = document.getElementById('texto-filtro');
        filtro = eliminarAcentos(input.value).toUpperCase();
        console.log("filtro: "+filtro)
        ul=$('div[id^="termino-busqueda_"]');
        for (i = 0; i < ul.length; i++) {
            a = eliminarAcentos(ul[i].getAttribute('id'));
            if (a.toUpperCase().indexOf(filtro) > -1) {
                ul[i].style.display = "";
            } else {
                ul[i].style.display = "none";
            }

        }
    };
    function eliminarAcentos(cadena){ 
        // Eliminar acentos y "ñ"
        cadena = cadena.replace(/á/gi,"a");
        cadena = cadena.replace(/é/gi,"e");
        cadena = cadena.replace(/í/gi,"i");
        cadena = cadena.replace(/ó/gi,"o");
        cadena = cadena.replace(/ú/gi,"u");
        cadena = cadena.replace(/ñ/gi,"n");
        return cadena;
    }
</script>
<script>
    $(document).ready(function () {
        var filtroEnlace = window.location.search;
        if (filtroEnlace.indexOf('termino') >= 0) {
            var codigoTermino = getUrlParameter('termino');
            var codigoPadre = getUrlParameter('codigoPadre');
            var nombreEnlacePadre = '#collapseExample_' + codigoPadre;
            console.log(nombreEnlacePadre);
            $(nombreEnlacePadre).collapse('show');
            mostrarInformacion(codigoTermino, 1);
        }
    });

    var getUrlParameter = function getUrlParameter(sParam) {
        var sPageURL = decodeURIComponent(window.location.search.substring(1)),
            sURLVariables = sPageURL.split('&'),
            sParameterName,
            i;

        for (i = 0; i < sURLVariables.length; i++) {
            sParameterName = sURLVariables[i].split('=');

            if (sParameterName[0] === sParam) {
                return sParameterName[1] === undefined ? true : sParameterName[1];
            }
        }
    };

</script>